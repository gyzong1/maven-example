# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java





trigger:
- none

pool:
  vmImage: ubuntu-latest

steps:
- task: CmdLine@2
  inputs:
    script: |
      wget https://releases.jfrog.io/artifactory/jfrog-cli/v2-jf/2.25.5/jfrog-cli-linux-amd64/jf
      
      chmod 777 ./jf
      
      ./jf c add "art1" --artifactory-url="http://1.117.196.4:8082/artifactory" --interactive=false --user='admin' --password=Password_123 --basic-auth-only
      
      ./jf config show
      
      ./jf mvnc --server-id-resolve="art1" --repo-resolve-releases="maven-virtual" --repo-resolve-snapshots="maven-virtual" --server-id-deploy="art1" --repo-deploy-releases="maven-dev-local" --repo-deploy-snapshots="maven-dev-local"
      
      ./jf mvn install -f pom.xml --build-name="gyzong1.maven-example" --build-number="1"
      
      ./jf rt bag "gyzong1.maven-example" "1" --config=jira-issue-new.conf --server-id="art1"

      ./jf rt bp "gyzong1.maven-example" "1" --env-exclude="*password*;*psw*;*secret*;*key*;*token*;*auth*;" --build-url="https://gyzong1.visualstudio.com/maven-example-new/_build?buildId=74" --server-id="art1"
